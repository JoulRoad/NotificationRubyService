#!/usr/bin/env ruby
require "fileutils"

APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # Check Ruby version
  ruby_version_file = File.join(APP_ROOT, '.ruby-version')
  if File.exist?(ruby_version_file)
    required_version = File.read(ruby_version_file).strip
    current_version = RUBY_VERSION
    
    unless current_version == required_version
      puts "\n== Ruby Version Mismatch =="
      puts "This project requires Ruby #{required_version}, but you're using #{current_version}"
      puts "Consider using a Ruby version manager like rbenv or rvm to install Ruby #{required_version}"
      puts "For rbenv: rbenv install #{required_version}"
      puts "For rvm: rvm install #{required_version}"
      
      # Ask if they want to continue anyway
      print "Continue anyway? (y/n): "
      unless STDIN.gets.chomp.downcase == 'y'
        abort("\n== Setup aborted due to Ruby version mismatch ==")
      end
    else
      puts "Ruby version #{required_version} detected. Continuing setup..."
    end
  else
    puts "No .ruby-version file found. Consider adding one to specify the required Ruby version."
  end

  # This script is a way to set up or update your development environment automatically.
  puts "\n== Installing dependencies =="
  system! "gem install bundler --conservative"
  
  # Configure bundler settings
  puts "Configuring Bundler..."
  system! "bundle config set --local path '.bundle'"
  system! "bundle config set --local without 'production'"
  
  # Install gems
  puts "Installing gems..."
  system! "bundle install"

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"
  
  puts "\n== Setting up Aerospike client =="
  # Check if Aerospike is being used
  if File.readlines("Gemfile").grep(/aerospike/).any?
    puts "Aerospike gem detected. Ensure Aerospike server is running."
    puts "Default Aerospike connection: localhost:3000"
  end

  puts "\n== Setup complete! =="
  puts "Your development environment has been configured with:"
  puts "- Ruby #{RUBY_VERSION}"
  puts "- Local gem isolation using Bundler (.bundle directory)"
  puts "- Database initialized"
  puts 
  puts "Run 'bin/rails server' to start the API server"
  puts "Test your API at: http://localhost:3000/health (if you have a health endpoint)"
end